% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func.R
\name{makeProteinTable}
\alias{makeProteinTable}
\title{Make protein table}
\usage{
makeProteinTable(pepdat, method = "hifly", hifly = 3, norm = "median",
  min.peptides = 1, verbose = FALSE)
}
\arguments{
\item{pepdat}{A \code{proteusData} object containing peptide data, normally created by \code{\link{makePeptideTable}}}

\item{method}{Method to create proteins. Can be "hifly" or "sum".}

\item{hifly}{The number of top peptides (high-flyers) to be used for protein intensity.}

\item{norm}{Normalization to use on peptides before converting into proteins.}

\item{min.peptides}{Minimum number of peptides per protein.}
}
\value{
A \code{proteusData} object containing protein intensities and metadata.
}
\description{
\code{makeProteinTable} creates a protein table from the peptide table using high-flyers or sum.
The "hifly" method is a follows.
\enumerate{
  \item For a given protein find all corresponding peptides.
  \item In each replicate, order intensities from the highest to the lowest. This is done separetly for each replicate.
  \item Select n top rows of the ordered table.
  \item In each replicate, find the mean of these three rows. This is the estimated protein intensity.
}
The "sum" method simply adds all intensities.
}
\examples{
evi <- readEvidenceFile("evidence.txt")
meta <- read.delim("metadata.txt", header=TRUE)
meta$sample <- factor(meta$sample, levels=meta$sample)
pepdat <- makePeptideTable(evi, meta)
prodat <- makeProteinTable(pepdat)

}
