% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func.R
\name{makePeptideTable}
\alias{makePeptideTable}
\title{Create peptide table from evidence data}
\usage{
makePeptideTable(
  evi,
  meta,
  sequence.col = c("sequence", "modified_sequence"),
  protein.col = c("protein", "protein_group"),
  measure.cols = measureColumns,
  aggregate.fun = aggregateSum,
  ...,
  experiment.type = c("label-free", "TMT", "SILAC"),
  ncores = 4
)
}
\arguments{
\item{evi}{Evidence table created with \code{\link{readEvidenceFile}}.}

\item{meta}{Data frame with metadata. As a minimum, it should contain
"sample" and "condition" columns.}

\item{sequence.col}{A column name to identify peptides. Can be either
"sequence" or "modified_sequence".}

\item{protein.col}{A column name to use for peptide-to-protein reference. Can
be either "protein" or "protein_group".}

\item{measure.cols}{A named list of measure columns; should be the same as
used in \code{\link{readEvidenceFile}}}

\item{aggregate.fun}{A function to aggregate pepetides with the same
sequence/sample.}

\item{...}{Additional parameters passed to the aggregate function}

\item{experiment.type}{Type of the experiment, "label-free", "TMT" or
"SILAC".}

\item{ncores}{Number of cores for parallel processing}
}
\value{
A \code{proteusData} object, containing peptide intensities and
  metadata.
}
\description{
\code{makePeptideTable} computes a peptide table and related data. Peptide
table is a matrix with columns corresponding to conditions and rows
corresponding to peptide sequences.
}
\details{
The evidence file contains a column called "Experiment" and one or more
columns with measure values. In case of label-free experiment there is only
one measure column: "Intensity". In case of TMT experiment there are several
measure columns, usually called "Reporter intensity 0", "Reporter intensity
1", and so on. \code{makePeptideTable} will combine "Experiment" and measure
columns in a way defined by the metadata (parameter \code{meta}). The name of
the combined column will be named using "sample" column in metadata.

The result is a \code{proteusData} object containing a table with rows
corresponding to peptides and columns corresponding to samples (as defined in
metadata). Each cell of the table is an aggregated measure values over all
evidence entries corresponding to the given sequence and experiment. How
these measure values are aggregated is controlled by the parameter
\code{aggregate.fun}.

There are two aggregation functions provided in this package:
\code{\link{aggregateMedian}} and \code{\link{aggregateSum}}. Depending on
the needs, the user can provide any arbitrary function to perform
aggregation.  We recommend using \code{aggregateSum} for label-free and TMT
experiments and \code{aggregateMedian} for SILAC experiments.

The aggregate function should be in form: \code{function(wp, ...)}. \code{wp}
is a matrix containing measurements from for a given peptide. Rows are
evidence file entries, columns are samples. \code{...} are additional
parameters for the function that are passed from \code{makePeptideTable}. The
aggregate function should return a vector of values for each sample. That is
the length of the vector should be the same as the number of columns in
\code{wp}. For example, the default aggregate function \code{aggregateSum}
calculates sums in each column of \code{wp}.

This function, apart from aggregating evidence data into peptides, builds a
peptide-to-protein reference and stores is in the returned object ($pep2prot
field). It can be used at peptide level, to identify which protein peptides
belong to. It is then passed to \code{\link{makeProteinTable}} function and
used to aggregate peptides to proteins. Here we can decide how peptides are
aggregated to proteins. This is controlled by the \code{protein.col}
parameter, which indicates which evidence column should be used to build
peptide-to-protein relation. If "protein" is used (default) the
peptite-to-protein relation is build on leading razor proteins. If
"protein_group" is used, then peptide-to-protein relation is based on protein
groups.

Only samples from metadata are used, regardless of the content of the
evidence data. This makes selection of samples for downstream processing
easy: select only required rows in the metadata data frame.
}
\examples{
\dontrun{
library(proteusLabelFree)
data(proteusLabelFree)
pepdat <- makePeptideTable(evi, meta, ncores=2)
}

}
